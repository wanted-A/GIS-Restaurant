version: "3.8"

volumes:
  gis-db: {}

services:
  gis-rabbitmq:
    image: rabbitmq
    container_name: gis-rabbitmq
    ports:
      - "5672:5672"
    networks:
      - restaurant-network

  gis-redis:
    image: redis
    container_name: gis-redis
    ports:
      - "6379:6379"
    networks:
      - restaurant-network
    
  gis-postgres:
    image: postgres
    container_name: gis-postgres
    volumes:
      - gis-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gis-restaurant
      - POSTGRES_USER=allen
      - POSTGRES_PASSWORD=dbpassword
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - restaurant-network

  gis-celery:
    container_name: gis-celery
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - gis-postgres
    command: celery -A config worker -l info
    env_file:
      - ./.env
    networks:
      - restaurant-network

  gis-celery-beat:
    container_name: gis-celery-beat
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - gis-postgres
    command: celery -A config beat -l info
    env_file:
      - ./.env
    networks:
      - restaurant-network

  gis-core:
    container_name: gis-core
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - gis-postgres
    command: sh -c "./script.sh"
    ports:
      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - ./.env
    networks:
      - restaurant-network

networks:
  restaurant-network:
    driver: bridge